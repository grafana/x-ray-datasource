{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/ui\"","webpack:///external \"emotion\"","webpack:///external \"lodash\"","webpack:///../node_modules/react-use/lib/useAsync.js","webpack:///external \"@grafana/runtime\"","webpack:///../node_modules/react-use/node_modules/tslib/tslib.es6.js","webpack:///../node_modules/@grafana/aws-sdk/index.js","webpack:///external \"app/core/app_events\"","webpack:///external \"prismjs\"","webpack:///../node_modules/@grafana/aws-sdk/dist/index.production.js","webpack:///../node_modules/react-use/lib/useAsyncFn.js","webpack:///../node_modules/react-use/lib/useMountedState.js","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./types.ts","webpack:///./components/CheatSheet.tsx","webpack:///./components/ConfigEditor/ConfigEditor.tsx","webpack:///./components/QueryEditor/useError.tsx","webpack:///./components/QueryEditor/constants.ts","webpack:///./components/QueryEditor/useInitQuery.ts","webpack:///./syntax.ts","webpack:///./components/QueryEditor/XRayQueryField.tsx","webpack:///./components/QueryEditor/QuerySection.tsx","webpack:///./components/QueryEditor/XrayLinks.tsx","webpack:///./components/QueryEditor/QueryEditorForm.tsx","webpack:///./components/QueryEditor/useRegions.ts","webpack:///../node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///../node_modules/rxjs/_esm5/internal/config.js","webpack:///../node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///../node_modules/rxjs/_esm5/internal/Observer.js","webpack:///../node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///../node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///../node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///../node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///../node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///../node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///../node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./utils/transform.ts","webpack:///./utils/flatten.ts","webpack:///./language_provider.ts","webpack:///./utils/links.ts","webpack:///./DataSource.ts","webpack:///./module.ts","webpack:///./components/QueryEditor/QueryEditor.tsx","webpack:///./components/QueryEditor/useGroups.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","tslib_1","react_1","useAsyncFn_1","__importDefault","default","fn","deps","_a","loading","state","callback","useEffect","__WEBPACK_EXTERNAL_MODULE__6__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__createBinding","k","k2","undefined","__exportStar","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__classPrivateFieldGet","receiver","privateMap","has","__classPrivateFieldSet","set","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__10__","AwsAuthType","Keys","Credentials","Default","EC2IAMRole","ARN","u","ConnectionConfig","h","D","return","useState","standardRegions","map","w","loadRegions","A","onOptionsChange","E","skipHeader","I","C","skipEndpoint","x","O","options","R","jsonData","profile","database","S","window","grafanaBootData","settings","T","awsAllowedAuthProviders","awsAssumeRoleEnabled","K","find","authType","createElement","FieldSet","InlineField","labelWidth","tooltip","Select","className","filter","includes","defaultValue","onChange","onUpdateDatasourceJsonDataOptionSelect","Input","placeholder","onUpdateDatasourceJsonDataOption","Fragment","secureJsonFields","accessKey","ButtonGroup","disabled","ToolbarButton","icon","type","onClick","onUpdateDatasourceResetOption","secureJsonData","onUpdateDatasourceSecureJsonDataOption","secretKey","assumeRoleArn","externalId","defaultEndpoint","endpoint","defaultRegion","allowCustomValue","formatCreateLabel","children","awsAuthProviderOptions","useMountedState_1","initialState","lastCallId","useRef","isMounted","useCallback","args","_i","callId","current","prevState","mountedRef","XrayQueryType","renderExpression","expr","onClickExample","refId","query","queryType","getTraceSummaries","render","props","useError","message","emit","alertWarning","data","isHandled","traceListOption","insightsOption","getInsights","serviceMapOption","getServiceMap","traceStatisticsOption","getTimeSeriesServiceStatistics","queryTypeOptions","getAnalyticsRootCauseResponseTimeService","getAnalyticsRootCauseResponseTimePath","getAnalyticsRootCauseErrorService","getAnalyticsRootCauseErrorPath","getAnalyticsRootCauseErrorMessage","getAnalyticsRootCauseFaultService","getAnalyticsRootCauseFaultPath","getAnalyticsRootCauseFaultMessage","getAnalyticsUser","getAnalyticsUrl","getAnalyticsStatusCode","columnNames","OkCount","TotalCount","dummyAllGroup","GroupName","GroupARN","useInitQuery","groups","regions","dataSource","defaultGroup","group","allGroups","sameArnGroup","FilterExpression","getNewGroup","region","newRegion","getNewRegion","BOOLEAN_KEYWORDS","documentation","NUMBER_KEYWORDS","STRING_KEYWORDS","COMPLEX_KEYWORDS","All_KEYWORDS","tokenizer","function","pattern","RegExp","join","punctuation","whitespace","boolean","isTraceId","logicalOperator","alias","number","plugins","onlyIn","node","getSyntax","XRayQueryField","languages","additionalPlugins","portalOrigin","onTypeahead","typeahead","datasource","languageProvider","getTrace","provideCompletionItems","suggestions","onRunQuery","getStyles","tooltipLink","QuerySection","selectedOptions","styles","style","flex","display","width","placement","content","href","rel","theme","size","history","queryTypeOptionToQueryType","option","container","link","XrayLinks","range","getServiceMapUrl","getXrayUrlForQuery","text","queryTypeToQueryTypeOptions","findOptionForQueryType","selected","found","test","trim","path","queryParamsRow","spring","regionSelect","QueryEditorForm","allRegions","menuPlacement","maxMenuHeight","newQueryType","columns","val","flexWrap","resolution","toString","parseInt","keys","values","closeMenuOnSelect","isClearable","defaultRegions","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","config","hostReportError","err","setTimeout","empty","closed","useDeprecatedSynchronousErrorHandling","complete","isArray","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Error","Subscription","unsubscribe","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","remove","index","flattenUnsubscriptionErrors","len","sub","add","teardown","subscription","EMPTY","tmp","subscriptions","subscriptionIndex","splice","reduce","errs","rxSubscriber","Math","random","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","MapOperator","project","source","subscribe","MapSubscriber","count","transformTraceResponse","processes","segments","segment","tags","Document","aws","forEach","segmentToTag","getTagsFromAws","http","request","url","URL","hostname","serviceName","gatherProcesses","Segments","subSegmentSpans","parentSpans","segmentSpans","subSegmentProcessId","getSubSegments","callBack","subsegments","subSegment","segmentParent","transformSegment","id","parentSpan","ps","spanID","duration","flags","logs","operationName","origin","processID","startTime","start_time","traceID","trace_id","Id","spans","warnings","parentId","references","refType","end_time","stackTraces","getStackTrace","getTagsForSpan","errorIconColor","getIconColor","throttle","cause","exceptions","exception","stackTrace","stack","line","annotations","Boolean","in_progress","fault","output","flattenedObject","prev","newKey","keyWithArray","tag","valueToTag","parseGraphResponse","response","services","fields","toArray","serviceJson","JSON","parse","showRequestCounts","idField","string","titleField","title","displayName","typeField","subTitle","mainStatField","mainStat","unit","secondaryStatField","secondaryStat","successField","arc","color","fixedColor","Fixed","errorsField","faultsField","throttledField","edgeIdField","edgeSourceField","edgeTargetField","edgeSourceNameField","edgeTargetNameField","edgeMainStatField","edgeSecondaryStatField","servicesMap","edges","service","statistics","statsSource","SummaryStatistics","Edges","stats","ReferenceId","Name","Type","TotalResponseTime","ResponseTimeHistogram","acc","tracesPerMinute","StartTime","EndTime","successPercentage","errorsPercentage","faultsPercentage","throttledPercentage","edge","edgeData","success","toFixed","firstNonZero","meta","preferredVisualisationType","endTime","toMs","ErrorStatistics","ThrottleCount","FaultStatistics","time","Date","valueOf","booleanKeyWords","prefixMatch","items","numberKeyWords","stringKeyWords","complexKeyWords","initialValues","start","getAllKeywords","makeLinks","itemQuery","instanceSettings","dataQuery","makeLink","queryFilter","internal","datasourceUid","uid","datasourceName","linkFactory","processedRequest","templateSrv","targets","newTarget","intervalMs","intervalSeconds","floor","replace","scopedVars","processRequest","pipe","dataQueryResponse","flatMap","frame","parseResponse","lift","getGroups","searchString","params","URLSearchParams","getResource","getRegions","RegionName","getXrayUrl","timeRange","section","urlQuery","append","from","toISOString","to","queryParams","traceData","traceParsed","parsedSegments","traceParsedForReal","trace","parseTraceResponse","links","parseTracesListResponse","parseInsightsResponse","servicesFrame","edgesFrame","parseServiceMapResponse","urlToAwsConsole","targetBlank","numeric","getDurationText","hours","minutes","seconds","setConfigEditor","setExploreStartPage","setQueryEditor","useRegions","useGroups"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useAsyncFn_1 = tslib_1.__importDefault(require(\"./useAsyncFn\"));\nfunction useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn_1.default(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    react_1.useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\nexports.default = useAsync;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/index.production.js');\n} else {\n  module.exports = require('./dist/index.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","Object.defineProperty(exports,\"__esModule\",{value:!0});var e,t=require(\"react\"),a=(e=t)&&\"object\"==typeof e&&\"default\"in e?e.default:e,n=require(\"@grafana/ui\"),o=require(\"@grafana/data\"),l=function(){return(l=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var s,r=[\"af-south-1\",\"ap-east-1\",\"ap-northeast-1\",\"ap-northeast-2\",\"ap-northeast-3\",\"ap-south-1\",\"ap-southeast-1\",\"ap-southeast-2\",\"ca-central-1\",\"cn-north-1\",\"cn-northwest-1\",\"eu-central-1\",\"eu-north-1\",\"eu-west-1\",\"eu-west-2\",\"eu-west-3\",\"me-south-1\",\"sa-east-1\",\"us-east-1\",\"us-east-2\",\"us-gov-east-1\",\"us-gov-west-1\",\"us-iso-east-1\",\"us-isob-east-1\",\"us-west-1\",\"us-west-2\"];(s=exports.AwsAuthType||(exports.AwsAuthType={})).Keys=\"keys\",s.Credentials=\"credentials\",s.Default=\"default\",s.EC2IAMRole=\"ec2_iam_role\",s.ARN=\"arn\";var i=[{label:\"Workspace IAM Role\",value:exports.AwsAuthType.EC2IAMRole},{label:\"AWS SDK Default\",value:exports.AwsAuthType.Default},{label:\"Access & secret key\",value:exports.AwsAuthType.Keys},{label:\"Credentials file\",value:exports.AwsAuthType.Credentials}],u=function(e){return{value:e,label:e}};exports.ConnectionConfig=function(e){var s,c,d,p,h,f,m,y,v,D=function(e,t){var a=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,o,l=a.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=l.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(a=l.return)&&a.call(l)}finally{if(o)throw o.error}}return s}(t.useState((e.standardRegions||r).map(u)),2),w=D[0],b=D[1],g=e.loadRegions,A=e.onOptionsChange,E=e.skipHeader,I=void 0!==E&&E,C=e.skipEndpoint,x=void 0!==C&&C,O=e.options,R=O.jsonData.profile;void 0===R&&(R=O.database);var S=window.grafanaBootData.settings,T=null!==(s=S.awsAllowedAuthProviders)&&void 0!==s?s:[exports.AwsAuthType.Default,exports.AwsAuthType.Keys,exports.AwsAuthType.Credentials],j=null===(c=S.awsAssumeRoleEnabled)||void 0===c||c,K=i.find((function(e){return e.value===O.jsonData.authType}));return t.useEffect((function(){!K&&T.length&&A(l(l({},O),{jsonData:l(l({},O.jsonData),{authType:T[0]})}))}),[K,O,A]),t.useEffect((function(){g&&g().then((function(e){return b(e.map(u))}))}),[g]),a.createElement(n.FieldSet,{label:I?\"\":\"Connection Details\",\"data-testid\":\"connection-config\"},a.createElement(n.InlineField,{label:\"Authentication Provider\",labelWidth:28,tooltip:\"Specify which AWS credentials chain to use.\"},a.createElement(n.Select,{className:\"width-30\",value:K,options:i.filter((function(e){return T.includes(e.value)})),defaultValue:O.jsonData.authType,onChange:function(t){o.onUpdateDatasourceJsonDataOptionSelect(e,\"authType\")(t)}})),\"credentials\"===O.jsonData.authType&&a.createElement(n.InlineField,{label:\"Credentials Profile Name\",labelWidth:28,tooltip:\"Credentials profile name, as specified in ~/.aws/credentials, leave blank for default.\"},a.createElement(n.Input,{className:\"width-30\",placeholder:\"default\",value:R,onChange:o.onUpdateDatasourceJsonDataOption(e,\"profile\")})),\"keys\"===O.jsonData.authType&&a.createElement(a.Fragment,null,a.createElement(n.InlineField,{label:\"Access Key ID\",labelWidth:28},(null===(d=e.options.secureJsonFields)||void 0===d?void 0:d.accessKey)?a.createElement(n.ButtonGroup,{className:\"width-30\"},a.createElement(n.Input,{disabled:!0,placeholder:\"Configured\"}),a.createElement(n.ToolbarButton,{icon:\"edit\",tooltip:\"Edit Access Key ID\",type:\"button\",onClick:o.onUpdateDatasourceResetOption(e,\"accessKey\")})):a.createElement(n.Input,{className:\"width-30\",value:null!==(h=null===(p=O.secureJsonData)||void 0===p?void 0:p.accessKey)&&void 0!==h?h:\"\",onChange:o.onUpdateDatasourceSecureJsonDataOption(e,\"accessKey\")})),a.createElement(n.InlineField,{label:\"Secret Access Key\",labelWidth:28},(null===(f=e.options.secureJsonFields)||void 0===f?void 0:f.secretKey)?a.createElement(n.ButtonGroup,{className:\"width-30\"},a.createElement(n.Input,{disabled:!0,placeholder:\"Configured\"}),a.createElement(n.ToolbarButton,{icon:\"edit\",type:\"button\",tooltip:\"Edit Secret Access Key\",onClick:o.onUpdateDatasourceResetOption(e,\"secretKey\")})):a.createElement(n.Input,{className:\"width-30\",value:null!==(y=null===(m=O.secureJsonData)||void 0===m?void 0:m.secretKey)&&void 0!==y?y:\"\",onChange:o.onUpdateDatasourceSecureJsonDataOption(e,\"secretKey\")}))),j&&a.createElement(a.Fragment,null,a.createElement(n.InlineField,{label:\"Assume Role ARN\",labelWidth:28,tooltip:\"Optionally, specify the ARN of a role to assume. Specifying a role here will ensure that the selected authentication provider is used to assume the specified role rather than using the credentials directly. Leave blank if you don't need to assume a role at all\"},a.createElement(n.Input,{className:\"width-30\",placeholder:\"arn:aws:iam:*\",value:O.jsonData.assumeRoleArn||\"\",onChange:o.onUpdateDatasourceJsonDataOption(e,\"assumeRoleArn\")})),a.createElement(n.InlineField,{label:\"External ID\",labelWidth:28,tooltip:\"If you are assuming a role in another account, that has been created with an external ID, specify the external ID here.\"},a.createElement(n.Input,{className:\"width-30\",placeholder:\"External ID\",value:O.jsonData.externalId||\"\",onChange:o.onUpdateDatasourceJsonDataOption(e,\"externalId\")}))),!x&&a.createElement(n.InlineField,{label:\"Endpoint\",labelWidth:28,tooltip:\"Optionally, specify a custom endpoint for the service\"},a.createElement(n.Input,{className:\"width-30\",placeholder:null!==(v=e.defaultEndpoint)&&void 0!==v?v:\"https://{service}.{region}.amazonaws.com\",value:O.jsonData.endpoint||\"\",onChange:o.onUpdateDatasourceJsonDataOption(e,\"endpoint\")})),a.createElement(n.InlineField,{label:\"Default Region\",labelWidth:28,tooltip:\"Specify the region, such as for US West (Oregon) use ` us-west-2 ` as the region.\"},a.createElement(n.Select,{className:\"width-30\",value:w.find((function(e){return e.value===O.jsonData.defaultRegion})),options:w,defaultValue:O.jsonData.defaultRegion,allowCustomValue:!0,onChange:o.onUpdateDatasourceJsonDataOptionSelect(e,\"defaultRegion\"),formatCreateLabel:function(e){return\"Use region: \"+e}})),e.children)},exports.awsAuthProviderOptions=i,exports.standardRegions=r;\n//# sourceMappingURL=index.production.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useMountedState_1 = tslib_1.__importDefault(require(\"./useMountedState\"));\nfunction useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = react_1.useRef(0);\n    var isMounted = useMountedState_1.default();\n    var _a = react_1.useState(initialState), state = _a[0], set = _a[1];\n    var callback = react_1.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        set(function (prevState) { return (tslib_1.__assign(tslib_1.__assign({}, prevState), { loading: true })); });\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\nexports.default = useAsyncFn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useMountedState() {\n    var mountedRef = react_1.useRef(false);\n    var get = react_1.useCallback(function () { return mountedRef.current; }, []);\n    react_1.useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    });\n    return get;\n}\nexports.default = useMountedState;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AwsAuthDataSourceJsonData } from '@grafana/aws-sdk';\nimport { DataQuery } from '@grafana/data';\n\nexport type Group = {\n  FilterExpression?: string;\n  GroupARN: string;\n  GroupName: string;\n};\n\nexport type Region = {\n  label: string;\n  value: string;\n  text: string;\n};\n\n// TODO: would make sense at this point to change to discriminated union type\nexport interface XrayQuery extends DataQuery {\n  queryType?: XrayQueryType;\n  query: string;\n\n  // Used in case of getTimeSeriesServiceStatistics to say which column/series actually return\n  columns?: string[];\n\n  // Interval of the getTimeSeriesServiceStatistics aggregation time bucket\n  resolution?: number;\n\n  // Used in case of getInsights to filter by state\n  state?: string;\n  group?: Group;\n\n  // Can be used to override the default region set in data source config\n  region?: string;\n}\n\n// Needs to match datasource Query* constants in backend code\nexport enum XrayQueryType {\n  getTrace = 'getTrace',\n  getTraceSummaries = 'getTraceSummaries',\n  getTimeSeriesServiceStatistics = 'getTimeSeriesServiceStatistics',\n  getAnalyticsRootCauseResponseTimeService = 'getAnalyticsRootCauseResponseTimeService',\n  getAnalyticsRootCauseResponseTimePath = 'getAnalyticsRootCauseResponseTimePath',\n  getAnalyticsRootCauseErrorService = 'getAnalyticsRootCauseErrorService',\n  getAnalyticsRootCauseErrorPath = 'getAnalyticsRootCauseErrorPath',\n  getAnalyticsRootCauseErrorMessage = 'getAnalyticsRootCauseErrorMessage',\n  getAnalyticsRootCauseFaultService = 'getAnalyticsRootCauseFaultService',\n  getAnalyticsRootCauseFaultPath = 'getAnalyticsRootCauseFaultPath',\n  getAnalyticsRootCauseFaultMessage = 'getAnalyticsRootCauseFaultMessage',\n  getAnalyticsUser = 'getAnalyticsUser',\n  getAnalyticsUrl = 'getAnalyticsUrl',\n  getAnalyticsStatusCode = 'getAnalyticsStatusCode',\n  getInsights = 'getInsights',\n  getServiceMap = 'getServiceMap',\n}\n\nexport interface XrayJsonData extends AwsAuthDataSourceJsonData {\n  // Can add X-Ray specific values here\n}\n\nexport interface TSDBResponse<T = any> {\n  results: Record<string, TSDBQueryResult<T>>;\n  message?: string;\n}\n\nexport interface TSDBQueryResult<T = any> {\n  refId: string;\n  series: TSDBTimeSeries[];\n  tables: Array<TSDBTable<T>>;\n  dataframes: number[][];\n  error?: string;\n  meta?: any;\n}\n\nexport interface TSDBTimeSeries {\n  name: string;\n  points: TSDBTimePoint[];\n  tags?: Record<string, string>;\n}\n\nexport type TSDBTimePoint = [number, number];\n\nexport interface TSDBTable<T = any> {\n  columns: Array<{ text: string }>;\n  rows: T[];\n}\n\nexport interface MetricRequest {\n  from?: string;\n  to?: string;\n  queries: MetricQuery[];\n  debug?: boolean;\n}\n\nexport interface MetricQuery {\n  [key: string]: any;\n  datasourceId: number;\n  refId?: string;\n  maxDataPoints?: number;\n  intervalMs?: number;\n}\n\nexport type XrayTraceData = {\n  Duration: number;\n  Id: string;\n  Segments: XrayTraceDataSegment[];\n};\n\nexport type XrayTraceDataRaw = {\n  Duration: number;\n  Id: string;\n  Segments: XrayTraceDataSegmentRaw[];\n};\n\nexport type XrayTraceDataSegment = {\n  Document: XrayTraceDataSegmentDocument;\n  Id: string;\n};\n\ntype XrayTraceDataSegmentRaw = {\n  Document: string;\n  Id: string;\n};\n\nexport interface AWS {\n  [index: string]: any;\n  ecs?: {\n    container?: string;\n  };\n  ec2?: {\n    instance_id?: string;\n    availability_zone?: string;\n  };\n  elastic_beanstalk?: {\n    environment_name?: string;\n    version_label?: string;\n    deployment_id?: number;\n  };\n  account_id?: string;\n  retries?: number;\n  region?: string;\n  operation?: string;\n  request_id?: string;\n  table_name?: string;\n  attribute_names_substituted: any[];\n  resource_names: string[];\n}\n\ninterface Request {\n  url: string;\n  method: string;\n  user_agent?: string;\n  client_ip?: string;\n}\n\ninterface Response {\n  status: number;\n  content_length?: number;\n}\n\ninterface Http {\n  request?: Request;\n  response: Response;\n}\n\ninterface Cause {\n  working_directory: string;\n  exceptions?: Array<{ message: string; type: string; stack: Array<{ path: string; line: number; label: string }> }>;\n}\n\nexport type XrayTraceDataSegmentDocument = {\n  // Same as Segment Id\n  id: string;\n  name: string;\n  start_time: number;\n  end_time?: number;\n  in_progress?: boolean;\n  // Same as top level Id\n  trace_id: string;\n  subsegments?: XrayTraceDataSegmentDocument[];\n  parent_id?: string;\n  origin?: string;\n  aws?: AWS;\n  error?: boolean;\n  fault?: boolean;\n  throttle?: boolean;\n  http?: Http;\n  cause?: Cause;\n  annotations?: any;\n  metadata?: any;\n};\n\ninterface HistogramValue {\n  Count: number;\n  Value: number;\n}\n\nexport interface SummaryStatistics {\n  ErrorStatistics: { OtherCount: number; ThrottleCount: number; TotalCount: number };\n  FaultStatistics: { OtherCount: number; TotalCount: number };\n  OkCount: number;\n  TotalCount: number;\n  TotalResponseTime: number;\n}\n\nexport interface XrayEdge {\n  Aliases: string[];\n  EndTime: number;\n  ReferenceId: number;\n  ResponseTimeHistogram: HistogramValue[];\n  StartTime: number;\n  SummaryStatistics: SummaryStatistics;\n}\n\nexport interface XrayService {\n  AccountId: string | null;\n  DurationHistogram: HistogramValue[];\n  Edges: XrayEdge[];\n  EndTime: number;\n  Name: string;\n  Names: string[];\n  ReferenceId: number;\n  ResponseTimeHistogram: HistogramValue[];\n  Root: true | null;\n  StartTime: number;\n  State: 'active' | 'unknown';\n  SummaryStatistics: SummaryStatistics;\n  Type: string;\n}\n","import { QueryEditorHelpProps } from '@grafana/data';\nimport { css } from 'emotion';\nimport React from 'react';\nimport { XrayQuery, XrayQueryType } from 'types';\n\nfunction renderExpression(expr: string, onClickExample: QueryEditorHelpProps['onClickExample']) {\n  return (\n    <div\n      className=\"cheat-sheet-item__example\"\n      key={expr}\n      onClick={() =>\n        onClickExample({ refId: 'A', query: expr, queryType: XrayQueryType.getTraceSummaries } as XrayQuery)\n      }\n    >\n      <code>{expr}</code>\n    </div>\n  );\n}\n\nexport default function CheatSheet({ onClickExample }: QueryEditorHelpProps) {\n  return (\n    <div>\n      <h2>X-Ray Cheat Sheet</h2>\n      <div className=\"cheat-sheet-item\">\n        <p>\n          <span>Use the search bar to display traces for a service, trace ID, or filter expression.</span>\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://docs.aws.amazon.com/console/xray/xray-filter-expressions\">\n            Learn more\n          </a>\n        </p>\n        <div className=\"cheat-sheet-item__title\">Filter expressions</div>\n        <div>You can use custom expressions to narrow down your search.</div>\n        <div>Traces where response time was more than 5 seconds:</div>\n        {renderExpression('responsetime > 5', onClickExample)}\n        <div>Traces where the total duration was 5 to 8 seconds:</div>\n        <div>{renderExpression('duration > 5 AND duration < 8', onClickExample)}</div>\n        <div>\n          Traces that included a call to &apos;api.example.com&apos; with a fault (500 series error) or response time\n          above 2.5 seconds, and with one or more segments having an annotation named &apos;account&apos; with value\n          &apos;12345&apos;:\n        </div>\n        <div>{renderExpression('service(\"api.example.com\") AND annotation.account = \"12345\"', onClickExample)}</div>\n        <div>\n          Traces where the service &apos;api.example.com&apos; made a call to &apos;backend.example.com&apos; that\n          failed with a fault:\n        </div>\n        <div>{renderExpression('edge(\"api.example.com\", \"backend.example.com\")', onClickExample)}</div>\n        <div>\n          Traces where the URL begins with &apos;http://api.example.com/&apos; and contains &apos;/v2/&apos; but does\n          not reach a service named &apos;api.example.com&apos;:\n        </div>\n        <div>\n          {renderExpression(\n            'http.url BEGINSWITH \"http://api.example.com/\" AND http.url CONTAINS \"/v2/\" AND !service(\"api.example.com\")',\n            onClickExample\n          )}\n        </div>\n        <div>Traces that completed successfully in under 3 seconds, including all downstream calls:</div>\n        <div>{renderExpression('ok !partial duration < 3', onClickExample)}</div>\n        <div>\n          If you have multiple services with the same name but different types, you can use an ID function to\n          distinguish between them in a service or edge filter expression:\n        </div>\n        <div>\n          {renderExpression('service(id(name: \"api.example.com\", type: \"AWS::EC2::Instance\"))', onClickExample)}\n        </div>\n        <div className=\"cheat-sheet-item\">\n          <div className=\"cheat-sheet-item__title\">Filter keywords</div>\n          <table\n            className={css`\n              td {\n                padding: 5px 10px 5px 10px;\n              }\n            `}\n          >\n            <thead>\n              <tr>\n                <th>Attribute</th>\n                <th>Type</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>ok</td>\n                <td>Boolean</td>\n                <td>Response status code was 2XX Success.</td>\n              </tr>\n              <tr>\n                <td>error</td>\n                <td>Boolean</td>\n                <td>Response status code was 4XX Client Error.</td>\n              </tr>\n              <tr>\n                <td>fault</td>\n                <td>Boolean</td>\n                <td>Response status code was 5XX Server Error.</td>\n              </tr>\n              <tr>\n                <td>partial</td>\n                <td>Boolean</td>\n                <td>Request has incomplete segments.</td>\n              </tr>\n              <tr>\n                <td>responsetime</td>\n                <td>Number</td>\n                <td>Time that the server took to send a response.</td>\n              </tr>\n              <tr>\n                <td>duration</td>\n                <td>Number</td>\n                <td>Total request duration including all downstream calls.</td>\n              </tr>\n              <tr>\n                <td>http.status</td>\n                <td>Number</td>\n                <td>Response status code.</td>\n              </tr>\n              <tr>\n                <td>http.url</td>\n                <td>String</td>\n                <td>Request URL.</td>\n              </tr>\n              <tr>\n                <td>http.method</td>\n                <td>String</td>\n                <td>Request method.</td>\n              </tr>\n              <tr>\n                <td>http.useragent</td>\n                <td>String</td>\n                <td>Request user agent string.</td>\n              </tr>\n              <tr>\n                <td>http.clientip</td>\n                <td>String</td>\n                <td>Requestor&apos;s IP address.</td>\n              </tr>\n              <tr>\n                <td>user</td>\n                <td>String</td>\n                <td>Value of user field on any segment in the trace.</td>\n              </tr>\n              <tr>\n                <td>annotation.*key*</td>\n                <td>String</td>\n                <td>Value of annotation with field *key*.</td>\n              </tr>\n              <tr>\n                <td>service(*name*) {}</td>\n                <td>Complex</td>\n                <td>\n                  Service with name *name*. Optional curly braces can contain a filter expression that applies to\n                  segments created by the service.\n                </td>\n              </tr>\n              <tr>\n                <td>edge(*source*, *destination*) {}</td>\n                <td>Complex</td>\n                <td>\n                  Connection between services *source* and *destination*. Optional curly braces can contain a filter\n                  expression that applies to segments on this connection.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { AwsAuthDataSourceJsonData, AwsAuthDataSourceSecureJsonData, ConnectionConfig } from '@grafana/aws-sdk';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport React, { PureComponent } from 'react';\n\nexport type Props = DataSourcePluginOptionsEditorProps<AwsAuthDataSourceJsonData, AwsAuthDataSourceSecureJsonData>;\n\nexport class ConfigEditor extends PureComponent<Props> {\n  render() {\n    return (\n      <div>\n        <ConnectionConfig {...this.props} />\n        {/* can add x-ray specific things here */}\n      </div>\n    );\n  }\n}\n","import { useEffect } from 'react';\n// This isn't exported in the sdk yet\n// @ts-ignore\nimport appEvents from 'grafana/app/core/app_events';\nimport { AppEvents } from '@grafana/data';\n\n/**\n * Hook to show error in a toast with additional message.\n */\nexport function useError(message: string, error?: Error) {\n  useEffect(() => {\n    if (error) {\n      appEvents.emit(AppEvents.alertWarning, [message, (error as any)?.data?.message || error.message]);\n      // This is going to be deprecated. Should be using this\n      // https://github.com/grafana/grafana/blob/9305117902a3698fcefc5d3063f58867717e34ce/public/app/core/services/backend_srv.ts#L265\n      // instead but DataSourceWithBackend.getResource does not allow us to send the config right now.\n      // TODO change when that is allowed.\n      (error as any).isHandled = true;\n    }\n  }, [error, message]);\n}\n","import { XrayQueryType } from '../../types';\nimport { CascaderOption } from '@grafana/ui/components/Cascader/Cascader';\n\nexport type QueryTypeOption = CascaderOption & {\n  queryType?: XrayQueryType;\n  children?: QueryTypeOption[];\n};\n\nexport const traceListOption: QueryTypeOption = { label: 'Trace List', value: 'traceList' };\nexport const insightsOption: QueryTypeOption = {\n  label: 'Insights',\n  value: 'insights',\n  queryType: XrayQueryType.getInsights,\n};\nexport const serviceMapOption: QueryTypeOption = {\n  label: 'Service Map',\n  value: 'serviceMap',\n  queryType: XrayQueryType.getServiceMap,\n};\n\nexport const traceStatisticsOption: QueryTypeOption = {\n  label: 'Trace Statistics',\n  value: 'traceStatistics',\n  queryType: XrayQueryType.getTimeSeriesServiceStatistics,\n};\n\nexport const queryTypeOptions: QueryTypeOption[] = [\n  traceListOption,\n  traceStatisticsOption,\n  insightsOption,\n  {\n    label: 'Trace Analytics',\n    value: 'traceAnalytics',\n    children: [\n      {\n        value: 'rootCause',\n        label: 'Root Cause',\n        children: [\n          {\n            value: 'responseTime',\n            label: 'Response Time',\n            children: [\n              {\n                value: 'rootCauseService',\n                label: 'Root Cause',\n                queryType: XrayQueryType.getAnalyticsRootCauseResponseTimeService,\n              } as QueryTypeOption,\n              {\n                value: 'path',\n                label: 'Path',\n                queryType: XrayQueryType.getAnalyticsRootCauseResponseTimePath,\n              },\n            ],\n          },\n          {\n            value: 'error',\n            label: 'Error',\n            children: [\n              {\n                value: 'rootCauseService',\n                label: 'Root Cause',\n                queryType: XrayQueryType.getAnalyticsRootCauseErrorService,\n              },\n              {\n                value: 'path',\n                label: 'Path',\n                queryType: XrayQueryType.getAnalyticsRootCauseErrorPath,\n              },\n              {\n                value: 'message',\n                label: 'Error Message',\n                queryType: XrayQueryType.getAnalyticsRootCauseErrorMessage,\n              },\n            ],\n          },\n          {\n            value: 'fault',\n            label: 'Fault',\n            children: [\n              {\n                value: 'rootCauseService',\n                label: 'Root Cause',\n                queryType: XrayQueryType.getAnalyticsRootCauseFaultService,\n              },\n              {\n                value: 'path',\n                label: 'Path',\n                queryType: XrayQueryType.getAnalyticsRootCauseFaultPath,\n              },\n              {\n                value: 'message',\n                label: 'Error Message',\n                queryType: XrayQueryType.getAnalyticsRootCauseFaultMessage,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        value: 'user',\n        label: 'End user impact',\n        queryType: XrayQueryType.getAnalyticsUser,\n      } as QueryTypeOption,\n      {\n        value: 'url',\n        label: 'URL',\n        queryType: XrayQueryType.getAnalyticsUrl,\n      },\n      {\n        value: 'statusCode',\n        label: 'HTTP status code',\n        queryType: XrayQueryType.getAnalyticsStatusCode,\n      },\n    ],\n  },\n  serviceMapOption,\n];\n\nexport const columnNames: { [key: string]: string } = {\n  'ErrorStatistics.ThrottleCount': 'Throttle Count',\n  'ErrorStatistics.TotalCount': 'Error Count',\n  'FaultStatistics.TotalCount': 'Fault Count',\n  OkCount: 'Success Count',\n  TotalCount: 'Total Count',\n  'Computed.AverageResponseTime': 'Average Response Time',\n};\n\n// Dummy group that can be selected only in insights;\nexport const dummyAllGroup = { GroupName: 'All', GroupARN: 'All' };\n","import { Group, Region, XrayQuery, XrayQueryType } from '../../types';\nimport { XrayDataSource } from '../../DataSource';\nimport { useEffect } from 'react';\nimport { dummyAllGroup } from './constants';\n\n/**\n * Inits the query on mount or on datasource change.\n */\nexport function useInitQuery(\n  query: XrayQuery,\n  onChange: (value: XrayQuery) => void,\n  groups: Group[],\n  regions: Region[],\n  dataSource: XrayDataSource\n) {\n  useEffect(() => {\n    // We assume here the \"Default\" group is always there but lets fallback to first group if not. In case there are\n    // no groups we don't have to actually crash as most queryTypes don't need group to be defined\n    const defaultGroup = groups.find((g: Group) => g.GroupName === 'Default') || groups[0];\n\n    // We assume that if there is no queryType during mount there should not be any query. This is basically\n    // a case of clean slate init of the query. We do not need to check if query has traceId or not as we do with\n    // the QueryTypeOptions mapping.\n    if (!query.queryType) {\n      onChange({\n        ...query,\n        queryType: XrayQueryType.getTraceSummaries,\n        query: '',\n        group: defaultGroup,\n        region: 'default',\n      });\n    } else {\n      // Lets make sure that we have group and region in the query and that they actually match what AWS tells us is\n      // valid.\n      const group = getNewGroup(query, groups, defaultGroup);\n      const region = getNewRegion(query, regions);\n\n      if (group !== query.group || region !== query.region) {\n        onChange({\n          ...query,\n          group,\n          region,\n        });\n      }\n    }\n  }, [query, groups, regions, onChange, dataSource]);\n}\n\nfunction getNewGroup(query: XrayQuery, groups: Group[], defaultGroup: Group): Group | undefined {\n  // Check if we can keep the group from previous x-ray datasource or we need to set it to default again.\n  let group = query.group;\n  let allGroups = groups;\n  if (query.queryType === XrayQueryType.getInsights) {\n    allGroups = [dummyAllGroup, ...groups];\n  }\n\n  let sameArnGroup = allGroups.find((g: Group) => g.GroupARN === query.group?.GroupARN);\n  if (!sameArnGroup) {\n    group = defaultGroup;\n  } else if (\n    // This is the case when the group changes ie has the same ARN but different filter for example. I assume this can\n    // happen but not 100% sure.\n    sameArnGroup.GroupName !== query.group?.GroupName ||\n    sameArnGroup.FilterExpression !== query.group?.FilterExpression\n  ) {\n    group = sameArnGroup;\n  }\n  return group;\n}\n\nfunction getNewRegion(query: XrayQuery, regions: Region[]): string {\n  if (query.region) {\n    const newRegion = regions.find((r) => r.value === query.region);\n    if (newRegion) {\n      return newRegion.value;\n    }\n  }\n  return 'default';\n}\n","import { CompletionItem } from '@grafana/ui';\nimport { Grammar } from 'prismjs';\n\nexport const BOOLEAN_KEYWORDS: CompletionItem[] = [\n  {\n    label: 'ok',\n    documentation: 'Response status code was 2XX Success.',\n  },\n  { label: 'error', documentation: 'Response status code was 4XX Client Error.' },\n  { label: 'throttle', documentation: 'Response status code was 429 Too Many Requests.' },\n  { label: 'fault', documentation: 'Response status code was 5XX Server Error.' },\n  { label: 'partial', documentation: 'Request has incomplete segments.' },\n  { label: 'inferred', documentation: 'Request has inferred segments.' },\n  { label: 'first', documentation: 'Element is the first of an enumerated list.' },\n];\n\nexport const NUMBER_KEYWORDS: CompletionItem[] = [\n  { label: 'responsetime', documentation: 'Time that the server took to send a response.' },\n  { label: 'duration', documentation: 'Total request duration, including all downstream calls.' },\n  { label: 'http.status', documentation: 'Response status code.' },\n  { label: 'index', documentation: 'Position of an element in an enumerated list.' },\n  {\n    label: 'coverage',\n    documentation:\n      'Decimal percentage of entity response time over root segment response time. Applicable only for response time root cause entities.',\n  },\n];\n\nexport const STRING_KEYWORDS: CompletionItem[] = [\n  { label: 'http.url', documentation: 'Request URL.' },\n  { label: 'http.method', documentation: 'Request method.' },\n  { label: 'http.useragent', documentation: 'Request user agent string.' },\n  { label: 'http.clientip', documentation: \"Requestor's IP address.\" },\n  { label: 'user', documentation: 'Value of the user field on any segment in the trace.' },\n  { label: 'name', documentation: 'The name of a service or exception.' },\n  { label: 'type', documentation: 'Service type.' },\n  { label: 'message', documentation: 'Exception message.' },\n  { label: 'availabilityzone', documentation: 'Value of the availabilityzone field on any segment in the trace.' },\n  { label: 'instance.id', documentation: 'Value of the instance ID field on any segment in the trace.' },\n  { label: 'resource.arn', documentation: 'Value of the resource ARN field on any segment in the trace.' },\n];\n\nexport const STRING_OPERATORS = ['=', '!=', 'CONTAINS', 'BEGINSWITH', 'ENDSWITH'];\n\nexport const COMPLEX_KEYWORDS: CompletionItem[] = [\n  {\n    label: 'service',\n    documentation: `service(_name_) {_filter_}\n     Service with name _name_.\n     Optional curly braces can contain a filter expression that applies to segments created by the service.`,\n  },\n  {\n    label: 'edge',\n    documentation: `edge(_source_, _destination_) {_filter_}\n      Connection between services _source_ and _destination_.\n      Optional curly braces can contain a filter expression that applies to segments on this connection.`,\n  },\n  {\n    label: 'annotation',\n    documentation: `annotation.key\n    Value of an annotation with field _key_.\n    The value of an annotation can be a Boolean, number, or string, so you can use any of the comparison operators of those types.\n    You can't use this keyword in combination with the service or edge keyword.`,\n  },\n  {\n    label: 'json',\n    documentation: `JSON root cause object.\n    See Getting data from AWS X-Ray for steps to create JSON entities programmatically.`,\n  },\n  {\n    label: 'id',\n    documentation: `id(name: \"service-name\", type:\"service::type\")\n    You can use the id function in place of a service name in service and edge filters.`,\n  },\n];\n\nexport const All_KEYWORDS = [...BOOLEAN_KEYWORDS, ...NUMBER_KEYWORDS, ...STRING_KEYWORDS, ...COMPLEX_KEYWORDS];\nexport const tokenizer: Grammar = {\n  function: {\n    pattern: new RegExp(`\\\\b(?:${All_KEYWORDS.map((f) => f.label).join('|')})\\\\b`, 'i'),\n  },\n  punctuation: /[{}()`,]/,\n  whitespace: /\\s+/,\n  boolean: /\\btrue|false\\b/,\n  isTraceId: /^\\d-\\w{8}-\\w{24}$/,\n  logicalOperator: {\n    pattern: /\\band|or\\b/i,\n    alias: 'builtin',\n  },\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n};\n","import React, { useRef, useEffect } from 'react';\nimport Prism from 'prismjs';\nimport { Node } from 'slate';\nimport { QueryField, TypeaheadInput, TypeaheadOutput, BracesPlugin, SlatePrism } from '@grafana/ui';\nimport { ExploreQueryFieldProps } from '@grafana/data';\nimport { XrayDataSource } from 'DataSource';\nimport { XrayQuery, XrayJsonData, XrayQueryType } from 'types';\nimport { XRayLanguageProvider } from 'language_provider';\nimport { tokenizer } from 'syntax';\n\ninterface XRayQueryFieldProps extends ExploreQueryFieldProps<XrayDataSource, XrayQuery, XrayJsonData> {}\n\nconst PRISM_LANGUAGE = 'xray';\nconst plugins = [\n  BracesPlugin(),\n  SlatePrism({\n    onlyIn: (node: Node) => node.object === 'block' && node.type === 'code_block',\n    getSyntax: () => PRISM_LANGUAGE,\n  }),\n];\n\nexport function XRayQueryField(props: XRayQueryFieldProps) {\n  const queryType = useRef(props.query.queryType);\n\n  useEffect(() => {\n    queryType.current = props.query.queryType;\n  }, [props.query, props.query.queryType]);\n\n  useEffect(() => {\n    Prism.languages[PRISM_LANGUAGE] = tokenizer;\n  }, []);\n\n  const onChangeQuery = (value: string) => {\n    const { query, onChange } = props;\n    const nextQuery: XrayQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const onTypeAhead = async (typeahead: TypeaheadInput): Promise<TypeaheadOutput> => {\n    const { datasource } = props;\n\n    // Only show suggestions for getTraceSummaries\n    if (!datasource.languageProvider || queryType.current === XrayQueryType.getTrace) {\n      return { suggestions: [] };\n    }\n\n    const xRayLanguageProvider = datasource.languageProvider as XRayLanguageProvider;\n\n    return await xRayLanguageProvider.provideCompletionItems(typeahead);\n  };\n\n  return (\n    <QueryField\n      additionalPlugins={plugins}\n      query={props.query.query}\n      portalOrigin=\"xray\"\n      onChange={onChangeQuery}\n      onTypeahead={onTypeAhead}\n      placeholder=\"Enter service name, annotation, trace ID.\"\n      onRunQuery={props.onRunQuery}\n    />\n  );\n}\n","import { Icon, InlineFormLabel, stylesFactory, Tooltip } from '@grafana/ui';\nimport { XRayQueryField } from './XRayQueryField';\nimport React from 'react';\nimport { queryTypeOptionToQueryType } from './QueryEditorForm';\nimport { XrayDataSource } from '../../DataSource';\nimport { css } from 'emotion';\nimport { XrayQuery } from '../../types';\nimport { QueryTypeOption } from './constants';\n\nconst getStyles = stylesFactory(() => ({\n  tooltipLink: css`\n    color: #33a2e5;\n    &:hover {\n      color: #33a2e5;\n      filter: brightness(120%);\n    }\n  `,\n}));\n\ntype Props = {\n  query: XrayQuery;\n  datasource: XrayDataSource;\n  onChange: (value: XrayQuery) => void;\n  onRunQuery: () => void;\n  selectedOptions: QueryTypeOption[];\n};\nexport function QuerySection(props: Props) {\n  const { datasource, query, onRunQuery, onChange, selectedOptions } = props;\n  const styles = getStyles();\n\n  const onRunQueryLocal = () => {\n    onChange(query);\n    // Only run query if it has value\n    if (query.query) {\n      onRunQuery();\n    }\n  };\n\n  return (\n    <div style={{ flex: 1, display: 'flex' }}>\n      <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n        Query&nbsp;\n        <Tooltip\n          placement=\"top\"\n          content={\n            <span>\n              See{' '}\n              <a\n                href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html?icmpid=docs_xray_console\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className={styles.tooltipLink}\n              >\n                X-Ray documentation\n              </a>{' '}\n              for filter expression help.\n            </span>\n          }\n          theme=\"info\"\n        >\n          <Icon className=\"gf-form-help-icon gf-form-help-icon--right-normal\" name=\"info-circle\" size=\"sm\" />\n        </Tooltip>\n      </InlineFormLabel>\n      <XRayQueryField\n        query={query}\n        history={[]}\n        datasource={datasource}\n        onRunQuery={onRunQueryLocal}\n        onChange={(e) => {\n          onChange({\n            ...query,\n            queryType: queryTypeOptionToQueryType(\n              selectedOptions.map((option) => option.value),\n              e.query\n            ),\n            query: e.query,\n          });\n        }}\n      />\n    </div>\n  );\n}\n","import { stylesFactory } from '@grafana/ui';\nimport { css } from 'emotion';\nimport { XrayDataSource } from '../../DataSource';\nimport { XrayQuery } from '../../types';\nimport { TimeRange } from '@grafana/data';\nimport React from 'react';\n\nconst getStyles = stylesFactory(() => ({\n  container: css`\n    display: flex;\n  `,\n  link: css`\n    white-space: nowrap;\n  `,\n}));\ntype XrayLinksProps = {\n  datasource: XrayDataSource;\n  query: XrayQuery;\n  range?: TimeRange;\n};\nexport function XrayLinks({ datasource, query, range }: XrayLinksProps) {\n  const styles = getStyles();\n  return (\n    <div className={styles.container}>\n      {[\n        ['To X-Ray service map', datasource.getServiceMapUrl(query.region)],\n        ['Open in X-Ray console', datasource.getXrayUrlForQuery(query, range)],\n      ].map(([text, href]) => {\n        return (\n          <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" key={href}>\n            <span className={`gf-form-label gf-form-label--btn ${styles.link}`}>\n              <i className=\"fa fa-share-square-o\" />\n              &nbsp;{text}\n            </span>\n          </a>\n        );\n      })}\n    </div>\n  );\n}\n","import { Group, Region, XrayJsonData, XrayQuery, XrayQueryType } from '../../types';\nimport { useInitQuery } from './useInitQuery';\nimport {\n  columnNames,\n  dummyAllGroup,\n  insightsOption,\n  QueryTypeOption,\n  queryTypeOptions,\n  serviceMapOption,\n  traceListOption,\n  traceStatisticsOption,\n} from './constants';\nimport { ButtonCascader, InlineFormLabel, MultiSelect, Segment, stylesFactory, Select } from '@grafana/ui';\nimport React from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { XrayDataSource } from '../../DataSource';\nimport { QuerySection } from './QuerySection';\nimport { css } from 'emotion';\nimport { XrayLinks } from './XrayLinks';\n\nfunction findOptionForQueryType(queryType: XrayQueryType, options: any = queryTypeOptions): QueryTypeOption[] {\n  for (const option of options) {\n    const selected: QueryTypeOption[] = [];\n    if (option.queryType === queryType) {\n      selected.push(option);\n      return selected;\n    }\n    if (option.children) {\n      const found = findOptionForQueryType(queryType, option.children);\n      if (found.length) {\n        selected.push(option, ...found);\n        return selected;\n      }\n    }\n  }\n  return [];\n}\n\n/**\n * We do some mapping of the actual queryTypes to options user can select. Mainly don't want user to choose\n * between trace list and single trace and we detect that based on query. So trace list option returns single trace\n * if query contains single traceID.\n */\nexport function queryTypeToQueryTypeOptions(queryType?: XrayQueryType): QueryTypeOption[] {\n  if (!queryType || queryType === XrayQueryType.getTimeSeriesServiceStatistics) {\n    return [traceStatisticsOption];\n  }\n\n  if (queryType === XrayQueryType.getTrace || queryType === XrayQueryType.getTraceSummaries) {\n    return [traceListOption];\n  }\n\n  if (queryType === XrayQueryType.getInsights) {\n    return [insightsOption];\n  }\n\n  return findOptionForQueryType(queryType);\n}\n\nexport function queryTypeOptionToQueryType(selected: string[], query: string): XrayQueryType {\n  if (selected[0] === traceListOption.value) {\n    const isTraceIdQuery = /^\\d-\\w{8}-\\w{24}$/.test(query.trim());\n    return isTraceIdQuery ? XrayQueryType.getTrace : XrayQueryType.getTraceSummaries;\n  } else {\n    let found: any = undefined;\n    for (const path of selected) {\n      found = (found?.children ?? queryTypeOptions).find((option: QueryTypeOption) => option.value === path);\n    }\n    return found.queryType;\n  }\n}\n\nconst getStyles = stylesFactory(() => ({\n  queryParamsRow: css`\n    flex-wrap: wrap;\n  `,\n  spring: css`\n    flex: 1;\n  `,\n  regionSelect: css`\n    margin-right: 4px;\n  `,\n}));\n\nexport type XrayQueryEditorFormProps = QueryEditorProps<XrayDataSource, XrayQuery, XrayJsonData> & {\n  groups: Group[];\n  regions: Region[];\n};\nexport function QueryEditorForm({\n  query,\n  onChange,\n  datasource,\n  onRunQuery,\n  groups,\n  range,\n  regions,\n}: XrayQueryEditorFormProps) {\n  const selectedOptions = queryTypeToQueryTypeOptions(query.queryType);\n  const allRegions = [{ label: 'default', value: 'default', text: 'default' }, ...regions];\n  useInitQuery(query, onChange, groups, allRegions, datasource);\n\n  const allGroups = selectedOptions[0] === insightsOption ? [dummyAllGroup, ...groups] : groups;\n\n  const styles = getStyles();\n  return (\n    <div>\n      {![insightsOption, serviceMapOption].includes(selectedOptions[0]) && (\n        <div className=\"gf-form\">\n          <QuerySection\n            query={query}\n            datasource={datasource}\n            onChange={onChange}\n            onRunQuery={onRunQuery}\n            selectedOptions={selectedOptions}\n          />\n        </div>\n      )}\n      <div className={`gf-form ${styles.queryParamsRow}`}>\n        <div className=\"gf-form\">\n          <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n            Region\n          </InlineFormLabel>\n          <Select\n            className={styles.regionSelect}\n            options={allRegions}\n            value={query.region}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                region: v.value,\n              })\n            }\n            width={18}\n            placeholder=\"Choose Region\"\n            menuPlacement=\"bottom\"\n            maxMenuHeight={500}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n            Query Type\n          </InlineFormLabel>\n          <ButtonCascader\n            value={selectedOptions.map((option) => option.value)}\n            options={queryTypeOptions}\n            onChange={(value) => {\n              const newQueryType = queryTypeOptionToQueryType(value, query.query || '');\n              onChange({\n                ...query,\n                queryType: newQueryType,\n                columns: newQueryType === XrayQueryType.getTimeSeriesServiceStatistics ? ['all'] : undefined,\n              } as any);\n            }}\n          >\n            {selectedOptions[selectedOptions.length - 1].label}\n          </ButtonCascader>\n        </div>\n\n        <div className=\"gf-form\">\n          <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n            Group\n          </InlineFormLabel>\n          <Segment\n            value={query.group?.GroupName}\n            options={allGroups.map((group: Group) => ({\n              value: group.GroupARN,\n              label: group.GroupName,\n            }))}\n            onChange={(value) => {\n              onChange({\n                ...query,\n                group: allGroups.find((g: Group) => g.GroupARN === value.value),\n              } as any);\n            }}\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          {selectedOptions[0] === insightsOption && (\n            <div className=\"gf-form\">\n              <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n                State\n              </InlineFormLabel>\n              <Segment\n                value={query.state ?? 'All'}\n                options={['All', 'Active', 'Closed'].map((val) => ({ value: val, label: val }))}\n                onChange={(value) => {\n                  onChange({\n                    ...query,\n                    state: value.value,\n                  });\n                }}\n              />\n            </div>\n          )}\n        </div>\n\n        <div className=\"gf-form\">\n          {selectedOptions[0] === traceStatisticsOption && (\n            <div className=\"gf-form\" data-testid=\"resolution\" style={{ flexWrap: 'wrap' }}>\n              <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n                Resolution\n              </InlineFormLabel>\n              <Segment\n                value={query.resolution ? query.resolution.toString() + 's' : 'auto'}\n                options={['auto', '60s', '300s'].map((val) => ({ value: val, label: val }))}\n                onChange={({ value }) => {\n                  onChange({\n                    ...query,\n                    resolution: value === 'auto' ? undefined : parseInt(value!, 10),\n                  } as any);\n                }}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* spring to push the sections apart */}\n        <div className={styles.spring} />\n        <XrayLinks datasource={datasource} query={query} range={range} />\n      </div>\n      {selectedOptions[0] === traceStatisticsOption && (\n        <div className=\"gf-form\" data-testid=\"column-filter\" style={{ flexWrap: 'wrap' }}>\n          <InlineFormLabel className=\"query-keyword\" width=\"auto\">\n            Columns\n          </InlineFormLabel>\n          <div style={{ flex: 1 }}>\n            <MultiSelect\n              allowCustomValue={false}\n              options={Object.keys(columnNames).map((c) => ({\n                label: columnNames[c],\n                value: c,\n              }))}\n              value={(query.columns || []).map((c) => ({\n                label: columnNames[c],\n                value: c,\n              }))}\n              onChange={(values) => onChange({ ...query, columns: values.map((v) => v.value!) })}\n              closeMenuOnSelect={false}\n              isClearable={true}\n              placeholder=\"All columns\"\n              menuPlacement=\"bottom\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import useAsync from 'react-use/lib/useAsync';\nimport { XrayDataSource } from '../../DataSource';\nimport { Region } from '../../types';\nimport { useError } from './useError';\n\n/**\n * Get regions from AWS. Fallbacks to static list if there is any error with that.\n */\nexport function useRegions(datasource: XrayDataSource): Region[] | undefined {\n  const result = useAsync(async () => datasource.getRegions(), [datasource]);\n\n  useError('Failed to load regions from AWS, showing default regions instead.', result.error);\n\n  if (result.error) {\n    return defaultRegions;\n  }\n\n  return result.loading ? undefined : result.value;\n}\n\nexport const defaultRegions = [\n  'ap-east-1',\n  'ap-northeast-1',\n  'ap-northeast-2',\n  'ap-northeast-3',\n  'ap-south-1',\n  'ap-southeast-1',\n  'ap-southeast-2',\n  'ca-central-1',\n  'cn-north-1',\n  'cn-northwest-1',\n  'eu-central-1',\n  'eu-north-1',\n  'eu-west-1',\n  'eu-west-2',\n  'eu-west-3',\n  'me-south-1',\n  'sa-east-1',\n  'us-east-1',\n  'us-east-2',\n  'us-gov-east-1',\n  'us-gov-west-1',\n  'us-iso-east-1',\n  'us-isob-east-1',\n  'us-west-1',\n  'us-west-2',\n].map((r) => ({\n  label: r,\n  value: r,\n  text: r,\n}));\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","import {\n  TraceProcess,\n  TraceSpanData,\n  TraceData,\n  TraceSpanReference,\n  TraceKeyValuePair,\n  DataFrame,\n  FieldType,\n  ArrayVector,\n  MutableDataFrame,\n  FieldColorModeId,\n} from '@grafana/data';\nimport {\n  XrayTraceData,\n  XrayTraceDataSegment,\n  XrayTraceDataSegmentDocument,\n  AWS,\n  SummaryStatistics,\n  XrayService,\n  XrayQuery,\n  XrayEdge,\n} from 'types';\nimport { keyBy, isPlainObject } from 'lodash';\nimport { NodeGraphDataFrameFieldNames } from '@grafana/ui';\nimport { flatten } from './flatten';\n\nconst MS_MULTIPLIER = 1000000;\n\n/**\n * Transforms response to format similar to Jaegers as we use Jaeger ui on the frontend.\n */\nexport function transformTraceResponse(data: XrayTraceData): TraceData & { spans: TraceSpanData[] } {\n  const processes = gatherProcesses(data.Segments);\n\n  const subSegmentSpans: TraceSpanData[] = [];\n  // parentSpans is used to group services that has the same name\n  const parentSpans: TraceSpanData[] = [];\n  const segmentSpans = data.Segments.map((segment) => {\n    let subSegmentProcessId = segment.Document.name;\n    getSubSegments(segment.Document, (subSegment, segmentParent) => {\n      subSegmentProcessId = processes[subSegment.name]?.serviceName ?? subSegmentProcessId;\n      subSegmentSpans.push(transformSegment(subSegment, subSegmentProcessId, segmentParent.id));\n    });\n\n    let parentSpan = parentSpans.find((ps) => ps.spanID === segment.Document.name + segment.Document.origin);\n\n    if (!parentSpan) {\n      parentSpan = {\n        duration: 0,\n        flags: 1,\n        logs: [],\n        operationName: segment.Document.origin ?? segment.Document.name,\n        processID: segment.Document.name,\n        spanID: segment.Document.name + segment.Document.origin,\n        startTime: segment.Document.start_time * MS_MULTIPLIER,\n        traceID: segment.Document.trace_id,\n      };\n      parentSpans.push(parentSpan);\n    }\n\n    return transformSegment(segment.Document, segment.Document.name, parentSpan.spanID);\n  });\n\n  return {\n    processes,\n    traceID: data.Id,\n    spans: [...subSegmentSpans, ...segmentSpans, ...parentSpans],\n    warnings: null,\n  };\n}\n\nfunction getSubSegments(\n  segment: XrayTraceDataSegmentDocument,\n  callBack: (segment: XrayTraceDataSegmentDocument, segmentParent: XrayTraceDataSegmentDocument) => void\n) {\n  if (segment.subsegments?.length) {\n    segment.subsegments.forEach((subSegment) => {\n      callBack(subSegment, segment);\n      getSubSegments(subSegment, callBack);\n    });\n  }\n}\n\nfunction transformSegment(segment: XrayTraceDataSegmentDocument, processID: string, parentId?: string): TraceSpanData {\n  let references: TraceSpanReference[] = [];\n  if (parentId) {\n    references.push({ refType: 'CHILD_OF', spanID: parentId, traceID: segment.trace_id });\n  }\n  const duration = segment.end_time ? segment.end_time * MS_MULTIPLIER - segment.start_time * MS_MULTIPLIER : 0;\n  const jaegerSpan: TraceSpanData = {\n    duration,\n    flags: 1,\n    logs: [],\n    operationName: segment.name,\n    processID,\n    startTime: segment.start_time * MS_MULTIPLIER,\n    spanID: segment.id,\n    traceID: segment.trace_id,\n    stackTraces: getStackTrace(segment),\n    tags: getTagsForSpan(segment),\n    references,\n    errorIconColor: getIconColor(segment),\n  };\n\n  return jaegerSpan;\n}\n\nfunction getIconColor(segment: XrayTraceDataSegmentDocument) {\n  if (segment.error) {\n    return '#FFC46E';\n  }\n\n  if (segment.throttle) {\n    return 'mediumpurple';\n  }\n  // Fault should be red so we don't want to set it because it is the default color.\n  return undefined;\n}\n\nfunction getStackTrace(segment: XrayTraceDataSegmentDocument): string[] | undefined {\n  if (!segment.cause?.exceptions) {\n    return undefined;\n  }\n  const stackTraces: string[] = [];\n  segment.cause.exceptions.forEach((exception) => {\n    let stackTrace = `${exception.type}: ${exception.message}`;\n    exception.stack?.forEach((stack) => {\n      stackTrace = stackTrace.concat(`\\nat ${stack.label} (${stack.path}:${stack.line})`);\n    });\n    stackTraces.push(stackTrace);\n  });\n  return stackTraces;\n}\n\nfunction getTagsForSpan(segment: XrayTraceDataSegmentDocument) {\n  const tags = [\n    ...segmentToTag({ aws: segment.aws }),\n    ...segmentToTag({ http: segment.http }),\n    ...segmentToTag({ annotations: segment.annotations }),\n    ...segmentToTag({ metadata: segment.metadata }),\n    { key: 'in progress', value: Boolean(segment.in_progress), type: 'boolean' },\n  ];\n\n  if (segment.origin) {\n    tags.push({ key: 'origin', value: segment.origin, type: 'string' });\n  }\n\n  const isError = segment.error || segment.fault || segment.throttle;\n\n  if (isError) {\n    tags.push({ key: 'error', value: true, type: 'boolean' });\n  }\n\n  return tags;\n}\n\nfunction segmentToTag(segment: any | undefined) {\n  const result: TraceKeyValuePair[] = [];\n  if (!segment) {\n    return result;\n  }\n\n  const flattenedObject = flatten(segment);\n  Object.keys(flattenedObject).map((key) => {\n    const tag = valueToTag(key, flattenedObject[key], typeof flattenedObject[key]);\n    if (tag) {\n      result.push(tag);\n    }\n  });\n  return result;\n}\n\nfunction getTagsFromAws(aws: AWS | undefined) {\n  const tags: TraceKeyValuePair[] = [];\n  if (!aws) {\n    return tags;\n  }\n  /**\n   * see https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html#api-segmentdocuments-aws\n   * for possible values on aws property\n   */\n  const awsKeys = ['ec2', 'ecs', 'elastic_beanstalk', 'region'];\n  awsKeys.forEach((key) => {\n    if (aws[key]) {\n      if (isPlainObject(aws[key])) {\n        tags.push(...segmentToTag(aws[key]));\n      } else {\n        tags.push({ key, value: aws[key], type: 'string' });\n      }\n    }\n  });\n  return tags;\n}\n\nfunction gatherProcesses(segments: XrayTraceDataSegment[]): Record<string, TraceProcess> {\n  const processes = segments.map((segment) => {\n    const tags: TraceKeyValuePair[] = [{ key: 'name', value: segment.Document.name, type: 'string' }];\n    tags.push(...getTagsFromAws(segment.Document.aws));\n    if (segment.Document.http?.request?.url) {\n      const url = new URL(segment.Document.http.request.url);\n      tags.push({ key: 'hostname', value: url.hostname, type: 'string' });\n    }\n    return {\n      serviceName: segment.Document.name,\n      tags,\n    };\n  });\n  return keyBy(processes, 'serviceName');\n}\n\nfunction valueToTag(key: string, value: string | number | undefined, type: string): TraceKeyValuePair | undefined {\n  if (!value || (Array.isArray(value) && !value.length)) {\n    return undefined;\n  }\n  return {\n    key,\n    type,\n    value,\n  };\n}\n\n/**\n * Get data frame to be shown in NodeGraph in Grafana with all the required stats. As we process both service map\n * requests and trace graph requests here you have to set whether to show traces per minute stat or request count as\n * trace graph cannot compute traces pre minute.\n */\nexport function parseGraphResponse(response: DataFrame, query?: XrayQuery, options?: { showRequestCounts: boolean }) {\n  // Again assuming this will be single field with single value which will be the trace data blob\n  const services: XrayService[] = response.fields[0].values.toArray().map((serviceJson) => {\n    return JSON.parse(serviceJson);\n  });\n\n  const showRequestCounts = options?.showRequestCounts ?? false;\n\n  const idField = {\n    name: NodeGraphDataFrameFieldNames.id,\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n  const titleField = {\n    name: NodeGraphDataFrameFieldNames.title,\n    type: FieldType.string,\n    values: new ArrayVector(),\n    config: { displayName: 'Name' },\n  };\n\n  const typeField = {\n    name: NodeGraphDataFrameFieldNames.subTitle,\n    type: FieldType.string,\n    values: new ArrayVector(),\n    config: { displayName: 'Type' },\n  };\n\n  const mainStatField = {\n    name: NodeGraphDataFrameFieldNames.mainStat,\n    type: FieldType.number,\n    values: new ArrayVector(),\n    config: { unit: 'ms/t', displayName: 'Average response time' },\n  };\n\n  const secondaryStatField = showRequestCounts\n    ? {\n        name: NodeGraphDataFrameFieldNames.secondaryStat,\n        type: FieldType.string,\n        values: new ArrayVector(),\n        config: { displayName: 'Requests count' },\n      }\n    : {\n        name: NodeGraphDataFrameFieldNames.secondaryStat,\n        type: FieldType.number,\n        values: new ArrayVector(),\n        config: { unit: 't/min', displayName: 'Transactions per minute' },\n      };\n\n  const successField = {\n    name: NodeGraphDataFrameFieldNames.arc + 'success',\n    type: FieldType.number,\n    values: new ArrayVector(),\n    config: { color: { fixedColor: 'green', mode: FieldColorModeId.Fixed }, displayName: 'Success' },\n  };\n\n  const errorsField = {\n    name: NodeGraphDataFrameFieldNames.arc + 'errors',\n    type: FieldType.number,\n    values: new ArrayVector(),\n    config: { color: { fixedColor: 'semi-dark-yellow', mode: FieldColorModeId.Fixed }, displayName: 'Error' },\n  };\n\n  const faultsField = {\n    name: NodeGraphDataFrameFieldNames.arc + 'faults',\n    type: FieldType.number,\n    values: new ArrayVector(),\n    config: { color: { fixedColor: 'red', mode: FieldColorModeId.Fixed }, displayName: 'Fault' },\n  };\n\n  const throttledField = {\n    name: NodeGraphDataFrameFieldNames.arc + 'throttled',\n    type: FieldType.number,\n    values: new ArrayVector(),\n    config: { color: { fixedColor: 'purple', mode: FieldColorModeId.Fixed }, displayName: 'Throttled' },\n  };\n\n  const edgeIdField = {\n    name: NodeGraphDataFrameFieldNames.id,\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n  const edgeSourceField = {\n    name: NodeGraphDataFrameFieldNames.source,\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n  const edgeTargetField = {\n    name: NodeGraphDataFrameFieldNames.target,\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n\n  // These are needed for links to work\n  const edgeSourceNameField = {\n    name: 'sourceName',\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n  const edgeTargetNameField = {\n    name: 'targetName',\n    type: FieldType.string,\n    values: new ArrayVector(),\n  };\n\n  // This has to be different a bit because we put different percentages here and want specific prefix based on which\n  // value we put in. So it can be success for one row but errors for second. We can only do that if we send it as a\n  // string.\n  const edgeMainStatField = {\n    name: NodeGraphDataFrameFieldNames.mainStat,\n    type: FieldType.string,\n    values: new ArrayVector(),\n    config: { displayName: 'Response percentage' },\n  };\n\n  const edgeSecondaryStatField = showRequestCounts\n    ? {\n        name: NodeGraphDataFrameFieldNames.secondaryStat,\n        type: FieldType.string,\n        values: new ArrayVector(),\n        config: { displayName: 'Requests count' },\n      }\n    : {\n        name: NodeGraphDataFrameFieldNames.secondaryStat,\n        type: FieldType.number,\n        values: new ArrayVector(),\n        config: { unit: 't/min', displayName: 'Transactions per minute' },\n      };\n\n  const servicesMap: { [refId: number]: XrayService } = {};\n  const edges: Array<{\n    edge: XrayEdge;\n    source: XrayService;\n  }> = [];\n\n  for (const service of services) {\n    const statsSource = service.SummaryStatistics ? service : service.Edges[0];\n    const stats = statsSource.SummaryStatistics;\n\n    idField.values.add(service.ReferenceId);\n    titleField.values.add(service.Name);\n    typeField.values.add(service.Type);\n    mainStatField.values.add(avgResponseTime(stats));\n\n    if (showRequestCounts) {\n      const count = statsSource.ResponseTimeHistogram.reduce((acc, h) => acc + h.Count, 0);\n      secondaryStatField.values.add(count + ' Request' + (count > 1 ? 's' : ''));\n    } else {\n      secondaryStatField.values.add(\n        service.SummaryStatistics\n          ? tracesPerMinute(stats, service.StartTime, service.EndTime)\n          : // For root nodes we compute stats from it's edge\n            tracesPerMinute(stats, service.Edges[0].StartTime, service.Edges[0].EndTime)\n      );\n    }\n    successField.values.add(successPercentage(stats));\n    errorsField.values.add(errorsPercentage(stats));\n    faultsField.values.add(faultsPercentage(stats));\n    throttledField.values.add(throttledPercentage(stats));\n\n    servicesMap[service.ReferenceId] = service;\n    edges.push(...service.Edges.map((e) => ({ edge: e, source: service })));\n  }\n\n  for (const edgeData of edges) {\n    const { edge, source } = edgeData;\n    const target = servicesMap[edge.ReferenceId];\n    edgeIdField.values.add(source.ReferenceId + '__' + target.ReferenceId);\n    edgeSourceField.values.add(source.ReferenceId);\n    edgeTargetField.values.add(edge.ReferenceId);\n    edgeSourceNameField.values.add(source.Name);\n    edgeTargetNameField.values.add(target.Name);\n\n    const stats = edge.SummaryStatistics;\n\n    const success = successPercentage(edge.SummaryStatistics);\n    if (success === 1) {\n      edgeMainStatField.values.add(`Success ${(success * 100).toFixed(2)}%`);\n    } else {\n      const firstNonZero = ([\n        [faultsPercentage(stats), 'Faults'],\n        [errorsPercentage(stats), 'Errors'],\n        [throttledPercentage(stats), 'Throttled'],\n      ] as Array<[number, string]>).find((v) => v[0] !== 0);\n      if (!firstNonZero) {\n        edgeMainStatField.values.add(`N/A`);\n      } else {\n        edgeMainStatField.values.add(`${firstNonZero[1]} ${(firstNonZero[0] * 100).toFixed(2)}%`);\n      }\n    }\n\n    if (showRequestCounts) {\n      const count = edge.ResponseTimeHistogram.reduce((acc, h) => acc + h.Count, 0);\n      edgeSecondaryStatField.values.add(count + ' Request' + (count > 1 ? 's' : ''));\n    } else {\n      edgeSecondaryStatField.values.add(tracesPerMinute(edge.SummaryStatistics, edge.StartTime, edge.EndTime));\n    }\n  }\n\n  return [\n    new MutableDataFrame({\n      name: 'nodes',\n      refId: query?.refId,\n      fields: [\n        idField,\n        titleField,\n        typeField,\n        mainStatField,\n        secondaryStatField,\n        successField,\n        faultsField,\n        errorsField,\n        throttledField,\n      ],\n      meta: {\n        preferredVisualisationType: 'nodeGraph',\n      },\n    }),\n    new MutableDataFrame({\n      name: 'edges',\n      refId: query?.refId,\n      fields: [\n        edgeIdField,\n        edgeSourceField,\n        edgeSourceNameField,\n        edgeTargetField,\n        edgeTargetNameField,\n        edgeMainStatField,\n        edgeSecondaryStatField,\n      ],\n      meta: {\n        preferredVisualisationType: 'nodeGraph',\n      },\n    }),\n  ];\n}\n\nexport function avgResponseTime(statistics: SummaryStatistics) {\n  return (statistics.TotalResponseTime / statistics.TotalCount) * 1000;\n}\n\nexport function tracesPerMinute(statistics: SummaryStatistics, startTime: number | string, endTime: number | string) {\n  return endTime && startTime ? statistics.TotalCount / ((toMs(endTime) - toMs(startTime)) / (60 * 1000)) : undefined;\n}\n\nexport function successPercentage(statistics: SummaryStatistics) {\n  return statistics.OkCount / statistics.TotalCount;\n}\n\nexport function throttledPercentage(statistics: SummaryStatistics) {\n  return statistics.ErrorStatistics.ThrottleCount / statistics.TotalCount;\n}\n\nexport function errorsPercentage(statistics: SummaryStatistics) {\n  return (statistics.ErrorStatistics.TotalCount - statistics.ErrorStatistics.ThrottleCount) / statistics.TotalCount;\n}\n\nexport function faultsPercentage(statistics: SummaryStatistics) {\n  return statistics.FaultStatistics.TotalCount / statistics.TotalCount;\n}\n\nfunction toMs(time: number | string): number {\n  if (typeof time === 'number') {\n    return time * 1000;\n  } else {\n    return new Date(time).valueOf();\n  }\n}\n","import { isPlainObject } from 'lodash';\n\nexport function flatten(target: object): any {\n  const output: any = {};\n\n  function step(object: any, prev: string | null) {\n    Object.keys(object).forEach((key) => {\n      const value = object[key];\n      const newKey = prev ? prev + '.' + key : key;\n\n      if (isPlainObject(value) && Object.keys(value).length) {\n        return step(value, newKey);\n      }\n\n      if (Array.isArray(value)) {\n        value.forEach((val, index) => {\n          const keyWithArray = `${newKey}[${index}]`;\n          if (isPlainObject(val)) {\n            step(val, keyWithArray);\n          } else {\n            output[keyWithArray] = val;\n          }\n        });\n        return;\n      }\n\n      output[newKey] = value;\n    });\n  }\n\n  step(target, null);\n\n  return output;\n}\n","import { LanguageProvider } from '@grafana/data';\nimport { XrayDataSource } from 'DataSource';\nimport { TypeaheadInput, TypeaheadOutput } from '@grafana/ui';\nimport { BOOLEAN_KEYWORDS, NUMBER_KEYWORDS, STRING_KEYWORDS, COMPLEX_KEYWORDS } from 'syntax';\n\nconst booleanKeyWords = { prefixMatch: true, label: 'Boolean Keywords', items: BOOLEAN_KEYWORDS };\nconst numberKeyWords = { prefixMatch: true, label: 'Number Keywords', items: NUMBER_KEYWORDS };\nconst stringKeyWords = { prefixMatch: true, label: 'String Keywords', items: STRING_KEYWORDS };\nconst complexKeyWords = { prefixMatch: true, label: 'Complex Keywords', items: COMPLEX_KEYWORDS };\n\nexport class XRayLanguageProvider extends LanguageProvider {\n  datasource: XrayDataSource;\n\n  constructor(dataSource: XrayDataSource, initialValues?: any) {\n    super();\n    this.datasource = dataSource;\n\n    Object.assign(this, initialValues);\n  }\n\n  request = async () => {\n    return Promise.resolve();\n  };\n\n  start = async () => {\n    return [];\n  };\n\n  /**\n   * Return suggestions based on input that can be then plugged into a type ahead dropdown.\n   */\n  async provideCompletionItems({ value }: TypeaheadInput): Promise<TypeaheadOutput> {\n    if (!value) {\n      return { suggestions: [] };\n    }\n\n    // Get all the keyword for now every time\n    return this.getAllKeywords();\n  }\n\n  private getAllKeywords = (): TypeaheadOutput => {\n    return { suggestions: [booleanKeyWords, numberKeyWords, stringKeyWords, complexKeyWords] };\n  };\n}\n","import { XrayQuery, XrayQueryType } from '../types';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport function makeLinks(itemQuery: string, instanceSettings: DataSourceInstanceSettings, dataQuery?: XrayQuery) {\n  const makeLink = linkFactory(itemQuery, instanceSettings, dataQuery);\n  return [\n    makeLink('Traces/All', XrayQueryType.getTraceSummaries),\n    makeLink('Traces/OK', XrayQueryType.getTraceSummaries, '{ ok = true }'),\n    makeLink('Traces/Errors', XrayQueryType.getTraceSummaries, '{ error = true }'),\n    makeLink('Traces/Faults', XrayQueryType.getTraceSummaries, '{ fault = true }'),\n\n    makeLink('Root cause/Error', XrayQueryType.getAnalyticsRootCauseErrorService),\n    makeLink('Root cause/Fault', XrayQueryType.getAnalyticsRootCauseFaultService),\n    makeLink('Root cause/Response Time', XrayQueryType.getAnalyticsRootCauseResponseTimeService),\n  ];\n}\n\nfunction linkFactory(itemQuery: string, instanceSettings: DataSourceInstanceSettings, dataQuery?: XrayQuery) {\n  return (title: string, queryType: XrayQueryType, queryFilter?: string) => {\n    return {\n      title,\n      url: '',\n      internal: {\n        query: {\n          ...(dataQuery || {}),\n          queryType,\n          query: itemQuery + (queryFilter ? ' ' + queryFilter : ''),\n        },\n        datasourceUid: instanceSettings.uid,\n        datasourceName: instanceSettings.name,\n      },\n    };\n  };\n}\n","import { sortBy } from 'lodash';\nimport {\n  ArrayVector,\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DateTimeDuration,\n  FieldType,\n  MutableDataFrame,\n  TimeRange,\n  toDuration,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  Group,\n  Region,\n  XrayJsonData,\n  XrayQuery,\n  XrayQueryType,\n  XrayTraceData,\n  XrayTraceDataRaw,\n  XrayTraceDataSegment,\n} from './types';\nimport { parseGraphResponse, transformTraceResponse } from 'utils/transform';\nimport { XRayLanguageProvider } from 'language_provider';\nimport { makeLinks } from './utils/links';\n\nexport class XrayDataSource extends DataSourceWithBackend<XrayQuery, XrayJsonData> {\n  private instanceSettings: DataSourceInstanceSettings<XrayJsonData>;\n\n  /** @ngInject */\n  constructor(instanceSettings: DataSourceInstanceSettings<XrayJsonData>) {\n    super(instanceSettings);\n\n    this.languageProvider = new XRayLanguageProvider(this);\n    this.instanceSettings = instanceSettings;\n  }\n\n  query(request: DataQueryRequest<XrayQuery>): Observable<DataQueryResponse> {\n    const processedRequest = processRequest(request, getTemplateSrv());\n    let response = super.query(processedRequest);\n    return response.pipe(\n      map((dataQueryResponse) => {\n        return {\n          ...dataQueryResponse,\n          data: dataQueryResponse.data.flatMap((frame) => {\n            const target = request.targets.find((t) => t.refId === frame.refId);\n            return this.parseResponse(frame, target);\n          }),\n        };\n      })\n    );\n  }\n\n  async getGroups(region?: string): Promise<Group[]> {\n    let searchString = '';\n    if (region) {\n      const params = new URLSearchParams({ region });\n      searchString = '?' + params.toString();\n    }\n    return this.getResource(`/groups${searchString}`);\n  }\n\n  async getRegions(): Promise<Region[]> {\n    const response = await this.getResource('/regions');\n    return [\n      ...sortBy(\n        response.map((r: any) => ({\n          label: r.RegionName,\n          value: r.RegionName,\n          text: r.RegionName,\n        })),\n        'label'\n      ),\n    ];\n  }\n\n  getServiceMapUrl(region?: string): string {\n    return `${this.getXrayUrl(region)}#/service-map/`;\n  }\n\n  getXrayUrlForQuery(query: XrayQuery, timeRange?: TimeRange): string {\n    let section;\n    let urlQuery: URLSearchParams | undefined = new URLSearchParams();\n    if (query.query) {\n      urlQuery.append('filter', query.query);\n    }\n    if (timeRange) {\n      urlQuery.append('timeRange', `${timeRange.from.toISOString()}~${timeRange.to.toISOString()}`);\n    }\n    if (query.group && query.group.GroupName !== 'Default') {\n      urlQuery.append('group', query.group.GroupName);\n    }\n\n    switch (query.queryType) {\n      case XrayQueryType.getTraceSummaries:\n        section = 'traces';\n        break;\n      case XrayQueryType.getTrace:\n        section = `traces/${query.query}`;\n        urlQuery = undefined;\n        break;\n      case XrayQueryType.getInsights:\n        // Insights don't use url params\n        section = 'insights';\n        urlQuery = undefined;\n        break;\n      // There is not real equivalent for this so lets point to analytics\n      case XrayQueryType.getTimeSeriesServiceStatistics:\n      default:\n        section = 'analytics';\n    }\n\n    // Check if we either dropped the params because they are not needed for some query types or they are empty.\n    let queryParams = urlQuery?.toString()\n      ? // For some reason the analytics view of X-ray does not handle some url escapes\n        '?' + urlQuery?.toString().replace(/\\+/g, '%20').replace(/%3A/g, ':').replace(/%7E/g, '~')\n      : '';\n    return `${this.getXrayUrl(query.region)}#/${section}${queryParams}`;\n  }\n\n  private getXrayUrl(region?: string): string {\n    region = !region || region === 'default' ? this.instanceSettings.jsonData.defaultRegion! : region;\n    return `https://${region}.console.aws.amazon.com/xray/home?region=${region}`;\n  }\n\n  private parseResponse(response: DataFrame, query?: XrayQuery): DataFrame[] {\n    // TODO this would better be based on type but backend Go def does not have dataFrame.type\n    switch (response.name) {\n      case 'Traces':\n        return parseTraceResponse(response, query);\n      case 'TraceSummaries':\n        return parseTracesListResponse(response, this.instanceSettings, query);\n      case 'InsightSummaries':\n        return this.parseInsightsResponse(response, query?.region);\n      case 'ServiceMap':\n        return parseServiceMapResponse(response, this.instanceSettings, query);\n      case 'TraceGraph':\n        return parseGraphResponse(response, query, { showRequestCounts: true });\n      default:\n        return [response];\n    }\n  }\n\n  private parseInsightsResponse(response: DataFrame, region?: string): DataFrame[] {\n    const urlToAwsConsole = `${this.getXrayUrl(region)}#/insights/`;\n    const idField = response.fields.find((f) => f.name === 'InsightId');\n    if (idField) {\n      idField.config.links = [{ title: '', url: urlToAwsConsole + '${__value.raw}', targetBlank: true }];\n    }\n    const duration = response.fields.find((f) => f.name === 'Duration');\n\n    if (duration) {\n      duration.type = FieldType.string;\n      duration.display = (val) => {\n        const momentDuration = toDuration(val);\n        return {\n          numeric: val,\n          text: getDurationText(momentDuration),\n        };\n      };\n    }\n    return [response];\n  }\n}\n\nfunction getDurationText(duration: DateTimeDuration) {\n  let result = '';\n\n  if (duration.hours()) {\n    result = `${duration.hours()} hours `;\n  }\n\n  if (duration.minutes()) {\n    result += `${duration.minutes()} minutes `;\n  }\n\n  if (duration.seconds()) {\n    result += `${duration.seconds()} seconds`;\n  }\n  return result;\n}\n\n/**\n The x-ray trace has a bit strange format where it comes as json and then some parts are string which also contains\n json, so some parts are escaped and we have to double parse that.\n */\nfunction parseTraceResponse(response: DataFrame, query?: XrayQuery): DataFrame[] {\n  // Again assuming this will ge single field with single value which will be the trace data blob\n  const traceData = response.fields[0].values.get(0);\n  const traceParsed: XrayTraceDataRaw = JSON.parse(traceData);\n\n  const parsedSegments = traceParsed.Segments.map((segment) => {\n    return {\n      ...segment,\n      Document: JSON.parse(segment.Document),\n    } as XrayTraceDataSegment;\n  });\n  const traceParsedForReal: XrayTraceData = {\n    ...traceParsed,\n    Segments: parsedSegments,\n  };\n\n  return [\n    new MutableDataFrame({\n      name: 'Trace',\n      refId: query?.refId,\n      fields: [\n        {\n          name: 'trace',\n          type: FieldType.trace,\n          values: new ArrayVector([transformTraceResponse(traceParsedForReal)]),\n        },\n      ],\n      meta: {\n        preferredVisualisationType: 'trace',\n      },\n    }),\n  ];\n}\n\n/**\n * Adds links to the Id field of the dataframe. This is later processed in grafana to create actual context dependant\n * link that works both in explore and in dashboards.\n * TODO This mutates the dataframe, probably just copy it but seems like new MutableDataframe(response) errors out\n */\nfunction parseTracesListResponse(\n  response: DataFrame,\n  instanceSettings: DataSourceInstanceSettings,\n  query?: XrayQuery\n): DataFrame[] {\n  const idField = response.fields.find((f) => f.name === 'Id');\n  idField!.config.links = [\n    {\n      title: 'Trace: ${__value.raw}',\n      url: '',\n      internal: {\n        datasourceUid: instanceSettings.uid,\n        datasourceName: instanceSettings.name,\n        query: {\n          ...(query || {}),\n          query: '${__value.raw}',\n          queryType: 'getTrace',\n        },\n      },\n    },\n  ];\n  return [response];\n}\n\nfunction parseServiceMapResponse(\n  response: DataFrame,\n  instanceSettings: DataSourceInstanceSettings,\n  query?: XrayQuery\n): DataFrame[] {\n  const [servicesFrame, edgesFrame] = parseGraphResponse(response, query);\n  const serviceQuery = 'service(id(name: \"${__data.fields.title}\", type: \"${__data.fields.subTitle}\"))';\n  servicesFrame.fields[0].config = {\n    links: makeLinks(serviceQuery, instanceSettings, query),\n  };\n\n  const edgeQuery = 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\")';\n  edgesFrame.fields[0].config = {\n    links: makeLinks(edgeQuery, instanceSettings, query),\n  };\n  return [servicesFrame, edgesFrame];\n}\n\nfunction processRequest(request: DataQueryRequest<XrayQuery>, templateSrv: TemplateSrv): DataQueryRequest<XrayQuery> {\n  return {\n    ...request,\n    targets: request.targets.map((target) => {\n      let newTarget = {\n        ...target,\n      };\n\n      // Handle interval => resolution mapping\n      if (newTarget.queryType === XrayQueryType.getTimeSeriesServiceStatistics) {\n        if (request.intervalMs && !newTarget.resolution) {\n          const intervalSeconds = Math.floor(request.intervalMs / 1000);\n          newTarget.resolution = intervalSeconds <= 60 ? 60 : 300;\n        }\n      }\n\n      // Variable interpolation\n      newTarget.query = templateSrv.replace(newTarget.query, request.scopedVars);\n\n      // Add Group filter expression to the query filter expression. This seems to mimic what x-ray console is doing\n      // as there are APIs that do not expect group just the filter expression. At the same time some APIs like Insights\n      // do not accept filter expression just the groupARN so this will have to be adjusted for them.\n      if (target.group && target.group.FilterExpression && target.queryType !== XrayQueryType.getTrace) {\n        if (newTarget.query) {\n          newTarget.query = target.group.FilterExpression + ' AND ' + newTarget.query;\n        } else {\n          newTarget.query = target.group.FilterExpression;\n        }\n      }\n\n      return newTarget;\n    }),\n  };\n}\n","import { AwsAuthDataSourceSecureJsonData } from '@grafana/aws-sdk';\nimport { DataSourcePlugin } from '@grafana/data';\nimport CheatSheet from './components/CheatSheet';\nimport { ConfigEditor } from './components/ConfigEditor/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor/QueryEditor';\nimport { XrayDataSource } from './DataSource';\nimport { XrayJsonData, XrayQuery } from './types';\n\nexport const plugin = new DataSourcePlugin<XrayDataSource, XrayQuery, XrayJsonData, AwsAuthDataSourceSecureJsonData>(\n  XrayDataSource\n)\n  .setConfigEditor(ConfigEditor)\n  .setExploreStartPage(CheatSheet) // Use this for Grafana versions before 7.4\n  .setQueryEditor(QueryEditor);\n","import React from 'react';\nimport { Spinner } from '@grafana/ui';\nimport { useGroups } from './useGroups';\nimport { QueryEditorForm, XrayQueryEditorFormProps } from './QueryEditorForm';\nimport { useRegions } from './useRegions';\n\n/**\n * Simple wrapper that is only responsible to load groups and delay actual render of the QueryEditorForm. Main reason\n * for that is that there is queryInit code that requires groups to be already loaded and is separate hook and it\n * cannot be inside a condition. There are other ways to put it into single component but this seems cleaner than\n * alternatives.\n */\nexport function QueryEditor(props: Omit<XrayQueryEditorFormProps, 'groups' | 'regions'>) {\n  const regions = useRegions(props.datasource);\n  // Use groups will return old groups after region change so it does not flash loading state. in case datasource\n  // changes regions will return undefined so that will do the loading state.\n  const groups = useGroups(props.datasource, props.query.region);\n\n  // We need this wrapper to wait for the groups and regions and only after that run the useInitQuery as it needs to\n  // know both at that point.\n  if (!(groups && regions)) {\n    return <Spinner />;\n  } else {\n    return <QueryEditorForm {...{ ...props, groups, regions }} />;\n  }\n}\n","import { XrayDataSource } from '../../DataSource';\nimport { Group } from '../../types';\nimport useAsync from 'react-use/lib/useAsync';\nimport { useError } from './useError';\n\n/**\n * Returns group for a datasource and region. In case the deps change we will still return old groups. This is to\n * prevent flash of loading state when changing group.\n */\nexport function useGroups(datasource: XrayDataSource, region?: string): Group[] | undefined {\n  const result = useAsync(async () => datasource.getGroups(region), [datasource, region]);\n  useError('Failed to load groups', result.error);\n\n  if (result.error) {\n    // The assumption is that this should always by ok to send with the query.\n    return [\n      {\n        // We dp not know the proper ARN but all APIs that use group also accept name.\n        GroupARN: 'default',\n        GroupName: 'Default',\n      },\n    ];\n  }\n\n  return result.value;\n}\n"],"sourceRoot":""}